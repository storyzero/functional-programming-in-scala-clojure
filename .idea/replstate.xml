<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1486106977820">{:repl-history {:ide [], :local [&quot;(def b (curry sum))\n  &quot; &quot;(b 1)\n   &quot; &quot;(defn sum [x y] (+ x y))\n  &quot; &quot;(apply sum 1)\n       &quot; &quot;(apply sum (1))\n       \n       &quot; &quot;(def ns [1 2 3])\n         &quot; &quot;(def ns [1 2 3 4 5 6 7 8 9 10])\n         &quot; &quot;ns&quot; &quot;(println ns)\n         &quot; &quot;(sorted [] &gt;)\n        &quot; &quot;(sorted? [1 2 3 4 5] &gt;)\n         &quot; &quot;(sorted? [1 2 3 4 5] &lt;)\n         \n         &quot; &quot;(def p (curry +))\n              &quot; &quot;(p 1)\n   &quot; &quot;((p 1) 2)\n  &quot; &quot;(def q (uncurry p))\n                &quot; &quot;(q 1 2)\n   &quot; &quot;lein run&quot; &quot;(require fpis-clojure.core)\n         &quot; &quot;*ns*&quot; &quot;(isSorted [1 2 3] &lt;)&quot; &quot;(is-sorted [1 2 3] &lt;)\n           &quot; &quot;(map (partial sum 2) [1 3 5 7 9])\n                      &quot; &quot;(sum 1 2)\n     &quot; &quot;def a = (curry sum)\n       &quot; &quot;def a (curry sum)\n             &quot; &quot;accessor&quot; &quot;(def a (curry sum))\n  &quot; &quot;a&quot; &quot;(a 1)&quot; &quot;(a 2)&quot; &quot;((a 2)2)\n  &quot; &quot;(def part-sum curry +)\n  &quot; &quot;(def part-sum (curry +))\n                     &quot; &quot;(part-sum 1)\n          &quot; &quot;((part-sum 1) 2)\n  &quot; &quot;uncurry&quot; &quot;(uncurry)&quot; &quot;(defn f [b] (+ b 1))\n               &quot; &quot;(defn g [a] (+ a +10))\n               &quot; &quot;(def c (compose f g))\n                &quot; &quot;(curry +)\n       &quot; &quot;(def a (curry +))\n              &quot; &quot;(a 1)\n   &quot; &quot;((a 1) 2)\n  &quot; &quot;(def sum [a b] (+ a b))\n                  &quot; &quot;(def c sum)\n  &quot; &quot;(sum 1)\n     &quot; &quot;(fn ([x] (f x)))\n            &quot; &quot;(fn ([x] (sum x)))\n            &quot; &quot;(:require fpis-clojure.core :reload)\n  &quot; &quot;(use fpis-clojure.core :reload)\n     &quot; &quot;(use core :reload)\n     &quot; &quot;(require '[fpis-clojure.core] :reload)\n         &quot; &quot;((curry sum) 1)\n  &quot; &quot;(((curry sum) 1) 2)\n  \n  &quot; &quot;(defn sum [a b] (+ a b))\n                   &quot; &quot;(def c (defn sum))\n         &quot; &quot;(def c (curry sum))\n         &quot; &quot;(c 1 2)\n   \n   &quot; &quot;([a b] (+ a bases))\n          &quot; &quot;(curry sum)&quot; &quot;curry&quot; &quot;(defn sum [a b] (+ a b))&quot; &quot;(curry sum)\n       &quot; &quot;(def c (curry sum))\n              &quot; &quot;(c 1)\n   &quot; &quot;(unccury c)\n         &quot; &quot;(uncurry c)\n         &quot; &quot;(def uc (uncurry c))\n                 &quot; &quot;(uc 1 2)&quot; &quot;c&quot; &quot;uc&quot; &quot;sum&quot; &quot;((c 1) 2)\n  &quot; &quot;(uncurry c)&quot; &quot;(sum [1 2 3 4])\n      &quot;], :remote []}}</component>
</project>